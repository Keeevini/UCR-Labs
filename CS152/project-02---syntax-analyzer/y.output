Terminals unused in grammar

   BREAK


Rules useless in parser due to conflicts

    3 functions: function


State 4 conflicts: 1 reduce/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: %empty
    3          | function
    4          | function functions

    5 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    6 declarations: %empty
    7             | declaration SEMICOLON declarations

    8 declaration: identifiers COLON INTEGER
    9            | identifiers COLON ENUM L_PAREN identifiers R_PAREN
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   11 statements: statement SEMICOLON
   12           | statement SEMICOLON statements

   13 statement: var ASSIGN expression
   14          | IF bool_exp THEN statements ENDIF
   15          | IF bool_exp THEN statements ELSE statements ENDIF
   16          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   17          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   18          | FOR vars ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP
   19          | READ vars
   20          | WRITE vars
   21          | CONTINUE
   22          | RETURN expression

   23 bool_exp: relation_and_exp
   24         | relation_and_exp OR bool_exp

   25 relation_and_exp: relation_exp
   26                 | relation_exp AND relation_and_exp

   27 relation_exp: expression comp expression
   28             | TRUE
   29             | FALSE
   30             | L_PAREN bool_exp R_PAREN
   31             | NOT expression comp expression
   32             | NOT TRUE
   33             | NOT FALSE
   34             | NOT L_PAREN bool_exp R_PAREN

   35 comp: EQ
   36     | NEQ
   37     | LT
   38     | GT
   39     | LTE
   40     | GTE

   41 expressions: %empty
   42            | expression
   43            | expression COMMA expressions

   44 expression: multiplicative_expr
   45           | multiplicative_expr ADD expression
   46           | multiplicative_expr SUB expression

   47 multiplicative_expr: term
   48                    | term MULT multiplicative_expr
   49                    | term DIV multiplicative_expr
   50                    | term MOD multiplicative_expr

   51 term: var
   52     | SUB var
   53     | NUMBER
   54     | SUB NUMBER
   55     | L_PAREN expression R_PAREN
   56     | SUB L_PAREN expression R_PAREN
   57     | identifier L_PAREN expressions R_PAREN

   58 vars: var
   59     | var COMMA vars

   60 var: identifier
   61    | identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   62 identifiers: identifier
   63            | identifier COMMA identifiers

   64 identifier: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 5
BEGIN_PARAMS (259) 5
END_PARAMS (260) 5
BEGIN_LOCALS (261) 5
END_LOCALS (262) 5
BEGIN_BODY (263) 5
END_BODY (264) 5
INTEGER (265) 8 10
ARRAY (266) 10
OF (267) 10
IF (268) 14 15
THEN (269) 14 15
ENDIF (270) 14 15
ELSE (271) 15
WHILE (272) 16 17
FOR (273) 18
DO (274) 17
BEGINLOOP (275) 16 17 18
ENDLOOP (276) 16 17 18
CONTINUE (277) 21
READ (278) 19
WRITE (279) 20
TRUE (280) 28 32
FALSE (281) 29 33
SEMICOLON (282) 5 7 11 12 18
COLON (283) 8 9 10
COMMA (284) 43 59 63
L_PAREN (285) 9 30 34 55 56 57
R_PAREN (286) 9 30 34 55 56 57
L_SQUARE_BRACKET (287) 10 61
R_SQUARE_BRACKET (288) 10 61
ASSIGN (289) 13 18
RETURN (290) 22
BREAK (291)
ENUM (292) 9
IDENT (293) 64
NUMBER (294) 10 18 53 54
AND (295) 26
OR (296) 24
SUB (297) 46 52 54 56
ADD (298) 45
MULT (299) 48
DIV (300) 49
MOD (301) 50
EQ (302) 35
NEQ (303) 36
LT (304) 37
GT (305) 38
LTE (306) 39
GTE (307) 40
NOT (308) 31 32 33 34


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
prog_start (55)
    on left: 1, on right: 0
functions (56)
    on left: 2 3 4, on right: 1 4
function (57)
    on left: 5, on right: 3 4
declarations (58)
    on left: 6 7, on right: 5 7
declaration (59)
    on left: 8 9 10, on right: 7
statements (60)
    on left: 11 12, on right: 5 12 14 15 16 17 18
statement (61)
    on left: 13 14 15 16 17 18 19 20 21 22, on right: 11 12
bool_exp (62)
    on left: 23 24, on right: 14 15 16 17 18 24 30 34
relation_and_exp (63)
    on left: 25 26, on right: 23 24 26
relation_exp (64)
    on left: 27 28 29 30 31 32 33 34, on right: 25 26
comp (65)
    on left: 35 36 37 38 39 40, on right: 27 31
expressions (66)
    on left: 41 42 43, on right: 43 57
expression (67)
    on left: 44 45 46, on right: 13 18 22 27 31 42 43 45 46 55 56 61
multiplicative_expr (68)
    on left: 47 48 49 50, on right: 44 45 46 48 49 50
term (69)
    on left: 51 52 53 54 55 56 57, on right: 47 48 49 50
vars (70)
    on left: 58 59, on right: 18 19 20 59
var (71)
    on left: 60 61, on right: 13 51 52 58 59
identifiers (72)
    on left: 62 63, on right: 8 9 10 63
identifier (73)
    on left: 64, on right: 5 57 60 61 62 63


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    5 function: FUNCTION . identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    identifier  go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    3 functions: function .
    4          | function . functions

    FUNCTION  shift, and go to state 1

    $end      reduce using rule 2 (functions)
    $end      [reduce using rule 3 (functions)]
    $default  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 4


State 5

   64 identifier: IDENT .

    $default  reduce using rule 64 (identifier)


State 6

    5 function: FUNCTION identifier . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


State 9

    5 function: FUNCTION identifier SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    5 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 6 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13
    identifier    go to state 14


State 11

    5 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    7 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    8 declaration: identifiers . COLON INTEGER
    9            | identifiers . COLON ENUM L_PAREN identifiers R_PAREN
   10            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

   62 identifiers: identifier .
   63            | identifier . COMMA identifiers

    COMMA  shift, and go to state 18

    $default  reduce using rule 62 (identifiers)


State 15

    5 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    7 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 6 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    identifiers   go to state 13
    identifier    go to state 14


State 17

    8 declaration: identifiers COLON . INTEGER
    9            | identifiers COLON . ENUM L_PAREN identifiers R_PAREN
   10            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22
    ENUM     shift, and go to state 23


State 18

   63 identifiers: identifier COMMA . identifiers

    IDENT  shift, and go to state 5

    identifiers  go to state 24
    identifier   go to state 14


State 19

    5 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 6 (declarations)

    declarations  go to state 25
    declaration   go to state 12
    identifiers   go to state 13
    identifier    go to state 14


State 20

    7 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


State 21

    8 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 8 (declaration)


State 22

   10 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 23

    9 declaration: identifiers COLON ENUM . L_PAREN identifiers R_PAREN

    L_PAREN  shift, and go to state 27


State 24

   63 identifiers: identifier COMMA identifiers .

    $default  reduce using rule 63 (identifiers)


State 25

    5 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 28


State 26

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 27

    9 declaration: identifiers COLON ENUM L_PAREN . identifiers R_PAREN

    IDENT  shift, and go to state 5

    identifiers  go to state 30
    identifier   go to state 14


State 28

    5 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 31


State 29

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 30

    9 declaration: identifiers COLON ENUM L_PAREN identifiers . R_PAREN

    R_PAREN  shift, and go to state 33


State 31

    5 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    FOR       shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 5

    statements  go to state 42
    statement   go to state 43
    var         go to state 44
    identifier  go to state 45


State 32

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 46


State 33

    9 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN .

    $default  reduce using rule 9 (declaration)


State 34

   14 statement: IF . bool_exp THEN statements ENDIF
   15          | IF . bool_exp THEN statements ELSE statements ENDIF

    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52

    bool_exp             go to state 53
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 56
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 35

   16 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52

    bool_exp             go to state 61
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 56
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 36

   18 statement: FOR . vars ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 5

    vars        go to state 62
    var         go to state 63
    identifier  go to state 45


State 37

   17 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 64


State 38

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 39

   19 statement: READ . vars

    IDENT  shift, and go to state 5

    vars        go to state 65
    var         go to state 63
    identifier  go to state 45


State 40

   20 statement: WRITE . vars

    IDENT  shift, and go to state 5

    vars        go to state 66
    var         go to state 63
    identifier  go to state 45


State 41

   22 statement: RETURN . expression

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    expression           go to state 68
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 42

    5 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 69


State 43

   11 statements: statement . SEMICOLON
   12           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 70


State 44

   13 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 71


State 45

   60 var: identifier .
   61    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 72

    $default  reduce using rule 60 (var)


State 46

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 73


State 47

   28 relation_exp: TRUE .

    $default  reduce using rule 28 (relation_exp)


State 48

   29 relation_exp: FALSE .

    $default  reduce using rule 29 (relation_exp)


State 49

   30 relation_exp: L_PAREN . bool_exp R_PAREN
   55 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52

    bool_exp             go to state 74
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 75
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 50

   53 term: NUMBER .

    $default  reduce using rule 53 (term)


State 51

   52 term: SUB . var
   54     | SUB . NUMBER
   56     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 77

    var         go to state 78
    identifier  go to state 45


State 52

   31 relation_exp: NOT . expression comp expression
   32             | NOT . TRUE
   33             | NOT . FALSE
   34             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 79
    FALSE    shift, and go to state 80
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    expression           go to state 82
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 53

   14 statement: IF bool_exp . THEN statements ENDIF
   15          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 83


State 54

   23 bool_exp: relation_and_exp .
   24         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 84

    $default  reduce using rule 23 (bool_exp)


State 55

   25 relation_and_exp: relation_exp .
   26                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 85

    $default  reduce using rule 25 (relation_and_exp)


State 56

   27 relation_exp: expression . comp expression

    EQ   shift, and go to state 86
    NEQ  shift, and go to state 87
    LT   shift, and go to state 88
    GT   shift, and go to state 89
    LTE  shift, and go to state 90
    GTE  shift, and go to state 91

    comp  go to state 92


State 57

   44 expression: multiplicative_expr .
   45           | multiplicative_expr . ADD expression
   46           | multiplicative_expr . SUB expression

    SUB  shift, and go to state 93
    ADD  shift, and go to state 94

    $default  reduce using rule 44 (expression)


State 58

   47 multiplicative_expr: term .
   48                    | term . MULT multiplicative_expr
   49                    | term . DIV multiplicative_expr
   50                    | term . MOD multiplicative_expr

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 47 (multiplicative_expr)


State 59

   51 term: var .

    $default  reduce using rule 51 (term)


State 60

   57 term: identifier . L_PAREN expressions R_PAREN
   60 var: identifier .
   61    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 98
    L_SQUARE_BRACKET  shift, and go to state 72

    $default  reduce using rule 60 (var)


State 61

   16 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 99


State 62

   18 statement: FOR vars . ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 100


State 63

   58 vars: var .
   59     | var . COMMA vars

    COMMA  shift, and go to state 101

    $default  reduce using rule 58 (vars)


State 64

   17 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    FOR       shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 5

    statements  go to state 102
    statement   go to state 43
    var         go to state 44
    identifier  go to state 45


State 65

   19 statement: READ vars .

    $default  reduce using rule 19 (statement)


State 66

   20 statement: WRITE vars .

    $default  reduce using rule 20 (statement)


State 67

   55 term: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    expression           go to state 103
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 68

   22 statement: RETURN expression .

    $default  reduce using rule 22 (statement)


State 69

    5 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 5 (function)


State 70

   11 statements: statement SEMICOLON .
   12           | statement SEMICOLON . statements

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    FOR       shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 5

    $default  reduce using rule 11 (statements)

    statements  go to state 104
    statement   go to state 43
    var         go to state 44
    identifier  go to state 45


State 71

   13 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    expression           go to state 105
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 72

   61 var: identifier L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    expression           go to state 106
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 73

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 10 (declaration)


State 74

   30 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 107


State 75

   27 relation_exp: expression . comp expression
   55 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 108
    EQ       shift, and go to state 86
    NEQ      shift, and go to state 87
    LT       shift, and go to state 88
    GT       shift, and go to state 89
    LTE      shift, and go to state 90
    GTE      shift, and go to state 91

    comp  go to state 92


State 76

   56 term: SUB L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    expression           go to state 109
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 77

   54 term: SUB NUMBER .

    $default  reduce using rule 54 (term)


State 78

   52 term: SUB var .

    $default  reduce using rule 52 (term)


State 79

   32 relation_exp: NOT TRUE .

    $default  reduce using rule 32 (relation_exp)


State 80

   33 relation_exp: NOT FALSE .

    $default  reduce using rule 33 (relation_exp)


State 81

   34 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   55 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52

    bool_exp             go to state 110
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 75
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 82

   31 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 86
    NEQ  shift, and go to state 87
    LT   shift, and go to state 88
    GT   shift, and go to state 89
    LTE  shift, and go to state 90
    GTE  shift, and go to state 91

    comp  go to state 111


State 83

   14 statement: IF bool_exp THEN . statements ENDIF
   15          | IF bool_exp THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    FOR       shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 5

    statements  go to state 112
    statement   go to state 43
    var         go to state 44
    identifier  go to state 45


State 84

   24 bool_exp: relation_and_exp OR . bool_exp

    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52

    bool_exp             go to state 113
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 56
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 85

   26 relation_and_exp: relation_exp AND . relation_and_exp

    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52

    relation_and_exp     go to state 114
    relation_exp         go to state 55
    expression           go to state 56
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 86

   35 comp: EQ .

    $default  reduce using rule 35 (comp)


State 87

   36 comp: NEQ .

    $default  reduce using rule 36 (comp)


State 88

   37 comp: LT .

    $default  reduce using rule 37 (comp)


State 89

   38 comp: GT .

    $default  reduce using rule 38 (comp)


State 90

   39 comp: LTE .

    $default  reduce using rule 39 (comp)


State 91

   40 comp: GTE .

    $default  reduce using rule 40 (comp)


State 92

   27 relation_exp: expression comp . expression

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    expression           go to state 115
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 93

   46 expression: multiplicative_expr SUB . expression

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    expression           go to state 116
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 94

   45 expression: multiplicative_expr ADD . expression

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    expression           go to state 117
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 95

   48 multiplicative_expr: term MULT . multiplicative_expr

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    multiplicative_expr  go to state 118
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 96

   49 multiplicative_expr: term DIV . multiplicative_expr

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    multiplicative_expr  go to state 119
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 97

   50 multiplicative_expr: term MOD . multiplicative_expr

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    multiplicative_expr  go to state 120
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 98

   57 term: identifier L_PAREN . expressions R_PAREN

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    $default  reduce using rule 41 (expressions)

    expressions          go to state 121
    expression           go to state 122
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 99

   16 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    FOR       shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 5

    statements  go to state 123
    statement   go to state 43
    var         go to state 44
    identifier  go to state 45


State 100

   18 statement: FOR vars ASSIGN . NUMBER SEMICOLON bool_exp SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 124


State 101

   59 vars: var COMMA . vars

    IDENT  shift, and go to state 5

    vars        go to state 125
    var         go to state 63
    identifier  go to state 45


State 102

   17 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 126


State 103

   55 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 108


State 104

   12 statements: statement SEMICOLON statements .

    $default  reduce using rule 12 (statements)


State 105

   13 statement: var ASSIGN expression .

    $default  reduce using rule 13 (statement)


State 106

   61 var: identifier L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 127


State 107

   30 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 30 (relation_exp)


State 108

   55 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 55 (term)


State 109

   56 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 128


State 110

   34 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 129


State 111

   31 relation_exp: NOT expression comp . expression

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    expression           go to state 130
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 112

   14 statement: IF bool_exp THEN statements . ENDIF
   15          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 131
    ELSE   shift, and go to state 132


State 113

   24 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 24 (bool_exp)


State 114

   26 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 26 (relation_and_exp)


State 115

   27 relation_exp: expression comp expression .

    $default  reduce using rule 27 (relation_exp)


State 116

   46 expression: multiplicative_expr SUB expression .

    $default  reduce using rule 46 (expression)


State 117

   45 expression: multiplicative_expr ADD expression .

    $default  reduce using rule 45 (expression)


State 118

   48 multiplicative_expr: term MULT multiplicative_expr .

    $default  reduce using rule 48 (multiplicative_expr)


State 119

   49 multiplicative_expr: term DIV multiplicative_expr .

    $default  reduce using rule 49 (multiplicative_expr)


State 120

   50 multiplicative_expr: term MOD multiplicative_expr .

    $default  reduce using rule 50 (multiplicative_expr)


State 121

   57 term: identifier L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 133


State 122

   42 expressions: expression .
   43            | expression . COMMA expressions

    COMMA  shift, and go to state 134

    $default  reduce using rule 42 (expressions)


State 123

   16 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 135


State 124

   18 statement: FOR vars ASSIGN NUMBER . SEMICOLON bool_exp SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 136


State 125

   59 vars: var COMMA vars .

    $default  reduce using rule 59 (vars)


State 126

   17 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 137


State 127

   61 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 61 (var)


State 128

   56 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 56 (term)


State 129

   34 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 34 (relation_exp)


State 130

   31 relation_exp: NOT expression comp expression .

    $default  reduce using rule 31 (relation_exp)


State 131

   14 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 14 (statement)


State 132

   15 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    FOR       shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 5

    statements  go to state 138
    statement   go to state 43
    var         go to state 44
    identifier  go to state 45


State 133

   57 term: identifier L_PAREN expressions R_PAREN .

    $default  reduce using rule 57 (term)


State 134

   43 expressions: expression COMMA . expressions

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    $default  reduce using rule 41 (expressions)

    expressions          go to state 139
    expression           go to state 122
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 135

   16 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 16 (statement)


State 136

   18 statement: FOR vars ASSIGN NUMBER SEMICOLON . bool_exp SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52

    bool_exp             go to state 140
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 56
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 137

   17 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52

    bool_exp             go to state 141
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 56
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 138

   15 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 142


State 139

   43 expressions: expression COMMA expressions .

    $default  reduce using rule 43 (expressions)


State 140

   18 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_exp . SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 143


State 141

   17 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 17 (statement)


State 142

   15 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 15 (statement)


State 143

   18 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON . vars ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 5

    vars        go to state 144
    var         go to state 63
    identifier  go to state 45


State 144

   18 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON vars . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 145


State 145

   18 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON vars ASSIGN . expression BEGINLOOP statements ENDLOOP

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    expression           go to state 146
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59
    identifier           go to state 60


State 146

   18 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON vars ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 147


State 147

   18 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON vars ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    FOR       shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 5

    statements  go to state 148
    statement   go to state 43
    var         go to state 44
    identifier  go to state 45


State 148

   18 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON vars ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 149


State 149

   18 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 18 (statement)
